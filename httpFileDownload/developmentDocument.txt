# 1. 目标：
	（1）根据提供的URL下载指定的文件，文件名与要下载文件相同
	（2）显示下载进度（已下载大小/总大小），下载速度，已经下载时间，预计剩余时间，进度条
	（3）如果目标服务器支持多线程，启用多线程下载，否则单线程下载
	（4）携带参数：-name filename,

# 2. 思路：
	（1）解析用户输入的命令，初始化一些参数，主要用于配置文件修改
	（2）解析用户提供的URL，获取目标服务器IP地址，段口号
	（3）使用TCP连接目标服务器
	（4）构造HTTP包，发送给服务器，获取服务器设置（是否支持多线程下载，总大小，长连接等）
	（5）接受服务器反馈，然后设定系统下载参数
	（6）如果是多线程，则分配线程任务。然后初始化系统参数，准备下载
	（7）下载，如果是多线程，子线程负责下载，然后放入缓冲区链，由主线程负责写入文件。
	（8）完成

# 3. 难点：
	（1）如何获取服务器设置
	（2）c/c++是否支持多线程写文件，如果可以修改7

# 2. 计划：
	（1）第一天：完成（1）（2）（3）
	（2）第二天：完成（4）（5）（6）
	（3）第三天：完成（7）， 写一个博客


# 3. 知识点：
	（1）client和server都是默认对方支持长链接的， 如果client使用http1.1协议，但又不希望使用长链接，则需要在header中指明connection的值为close；如果server方也不想支持长链接，则在response中也需要明确说明connection的值为close。不论request还是response的header中包含了值为close的connection，都表明当前正在使用的tcp链接在当天请求处理完毕后会被断掉。以后client再进行新的请求时就必须创建新的tcp链接了。
	(2) URL语法为：<scheme>://<user>:<password>@<host>:<port>/<path>;<params>?<query>#<frag>		1. schem: 方案
		2. user : 用户名
		3. password： 密码
		4. host： 服务器主机名或者点分IP地址
		5. port：端口
		6. path：路径
		7. params: 参数，可包含多个用分号分隔
		8. query : 查询
		9. frag  : 片段，一部分资源的名字，不会将其传送给服务器，在客户端使用












